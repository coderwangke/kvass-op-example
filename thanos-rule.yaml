apiVersion: v1
kind: Service
metadata:
  name: thanos-rule
  namespace: monitoring
  labels:
    app.kubernetes.io/name: thanos-rule
spec:
  ports:
    - name: grpc
      port: 10901
      targetPort: grpc
    - name: http
      port: 10902
      targetPort: http
  selector:
    app.kubernetes.io/name: thanos-rule
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-rule
  namespace: monitoring
  labels:
    app.kubernetes.io/name: thanos-rule
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-rule
  serviceName: ""
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-rule
    spec:
      containers:
      - args:
          - rule
          - --rule-file=/etc/thanos/rules/*.yaml
          - --grpc-address=:10901
          - --http-address=:10902
          - --data-dir=/var/thanos/rule
          - --query=dnssrv+_http._tcp.thanos-query.$(NAMESPACE).svc.cluster.local
          - --eval-interval=10s
          - --tsdb.retention=3h
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        image: thanosio/thanos:v0.18.0
        volumeMounts:
        - mountPath: /etc/thanos/rules/prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
          name: prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 30
        name: thanos-query
        ports:
          - containerPort: 10901
            name: grpc
          - containerPort: 10902
            name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
      - args:
        - --webhook-url=http://127.0.0.1:10902/-/reload
        - --volume-dir=/etc/thanos/rules/prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
        image: docker.io/jimmidyson/configmap-reload:v0.3.0
        imagePullPolicy: IfNotPresent
        name: rules-configmap-reloader
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/thanos/rules/prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
          name: prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 120
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0
        name: prometheus-prom-op-prometheus-operato-prometheus-rulefiles-0